{"ast":null,"code":"var _jsxFileName = \"/Users/alejandrogarciacarmona/Documents/Formacio\\u0301nBlacnosaur/tutorialReactReduxToolkitCRUD/react-redux-toolkit-crud/src/components/TaskForm.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addTask } from '../features/task/taskSlice';\nimport { v4 as uuid } from 'uuid'; //para darle un id aleatorio a cada tarea\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TaskForm() {\n  _s();\n  const [task, setTask] = useState({\n    title: '',\n    description: ''\n  });\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const params = useParams();\n  const tasks = useSelector(state => state.tasks);\n  const handleChange = e => {\n    setTask({\n      ...task,\n      //va a coger todos los datos anteriores que había\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = e => {\n    e.preventDefault(); //para evitar que se refresque la pagina al dar al botón 'save'\n    dispatch(addTask({\n      ...task,\n      id: uuid()\n    }));\n    navigate('/'); //una vez de al boton save, te reenvia a esta pagina\n  };\n\n  useEffect(() => {\n    if (params.id) {\n      setTask(tasks.find(task => task.id === params.id));\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      name: \"title\",\n      type: \"text\",\n      placeholder: \"title\",\n      onChange: handleChange,\n      value: task.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      name: \"description\",\n      placeholder: \"description\",\n      onChange: handleChange,\n      value: task.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Save\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n}\n_s(TaskForm, \"UObGCgV8pPBx14SgrjN47wwX4Zc=\", false, function () {\n  return [useDispatch, useNavigate, useParams, useSelector];\n});\n_c = TaskForm;\nexport default TaskForm;\nvar _c;\n$RefreshReg$(_c, \"TaskForm\");","map":{"version":3,"names":["useState","useEffect","useDispatch","useSelector","addTask","v4","uuid","useNavigate","useParams","jsxDEV","_jsxDEV","TaskForm","_s","task","setTask","title","description","dispatch","navigate","params","tasks","state","handleChange","e","target","name","value","handleSubmit","preventDefault","id","find","onSubmit","children","type","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/alejandrogarciacarmona/Documents/FormaciónBlacnosaur/tutorialReactReduxToolkitCRUD/react-redux-toolkit-crud/src/components/TaskForm.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'; \nimport { addTask } from '../features/task/taskSlice';\nimport { v4 as uuid } from 'uuid'; //para darle un id aleatorio a cada tarea\nimport { useNavigate, useParams } from 'react-router-dom';\n\nfunction TaskForm() {\n    const [task, setTask] = useState({\n        title: '',\n        description: '',\n    });\n\n    const dispatch = useDispatch();\n    const navigate = useNavigate();\n    const params = useParams();\n    const tasks = useSelector(state => state.tasks);\n\n    const handleChange = (e) => {\n        setTask({\n            ...task, //va a coger todos los datos anteriores que había\n            [e.target.name]: e.target.value,\n        })\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault(); //para evitar que se refresque la pagina al dar al botón 'save'\n        dispatch(addTask({\n            ...task,\n            id: uuid(),\n        }));\n        navigate('/') //una vez de al boton save, te reenvia a esta pagina\n    }\n\n    useEffect(() => {\n        if(params.id) {\n            setTask(tasks.find(task => task.id === params.id))\n        }\n        \n    }, []);\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <input\n                name='title'\n                type='text'\n                placeholder='title'\n                onChange={handleChange}\n                value={task.title} />\n            <textarea\n                name='description'\n                placeholder=\"description\"\n                onChange={handleChange}\n                value={task.description}  />\n            <button>Save</button>\n        </form>\n    )\n}\n\nexport default TaskForm;"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,OAAO,QAAQ,4BAA4B;AACpD,SAASC,EAAE,IAAIC,IAAI,QAAQ,MAAM,CAAC,CAAC;AACnC,SAASC,WAAW,EAAEC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1D,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAChB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGd,QAAQ,CAAC;IAC7Be,KAAK,EAAE,EAAE;IACTC,WAAW,EAAE;EACjB,CAAC,CAAC;EAEF,MAAMC,QAAQ,GAAGf,WAAW,CAAC,CAAC;EAC9B,MAAMgB,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAC9B,MAAMY,MAAM,GAAGX,SAAS,CAAC,CAAC;EAC1B,MAAMY,KAAK,GAAGjB,WAAW,CAACkB,KAAK,IAAIA,KAAK,CAACD,KAAK,CAAC;EAE/C,MAAME,YAAY,GAAIC,CAAC,IAAK;IACxBT,OAAO,CAAC;MACJ,GAAGD,IAAI;MAAE;MACT,CAACU,CAAC,CAACC,MAAM,CAACC,IAAI,GAAGF,CAAC,CAACC,MAAM,CAACE;IAC9B,CAAC,CAAC;EACN,CAAC;EAED,MAAMC,YAAY,GAAIJ,CAAC,IAAK;IACxBA,CAAC,CAACK,cAAc,CAAC,CAAC,CAAC,CAAC;IACpBX,QAAQ,CAACb,OAAO,CAAC;MACb,GAAGS,IAAI;MACPgB,EAAE,EAAEvB,IAAI,CAAC;IACb,CAAC,CAAC,CAAC;IACHY,QAAQ,CAAC,GAAG,CAAC,EAAC;EAClB,CAAC;;EAEDjB,SAAS,CAAC,MAAM;IACZ,IAAGkB,MAAM,CAACU,EAAE,EAAE;MACVf,OAAO,CAACM,KAAK,CAACU,IAAI,CAACjB,IAAI,IAAIA,IAAI,CAACgB,EAAE,KAAKV,MAAM,CAACU,EAAE,CAAC,CAAC;IACtD;EAEJ,CAAC,EAAE,EAAE,CAAC;EAEN,oBACInB,OAAA;IAAMqB,QAAQ,EAAEJ,YAAa;IAAAK,QAAA,gBACzBtB,OAAA;MACIe,IAAI,EAAC,OAAO;MACZQ,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,OAAO;MACnBC,QAAQ,EAAEb,YAAa;MACvBI,KAAK,EAAEb,IAAI,CAACE;IAAM;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACzB7B,OAAA;MACIe,IAAI,EAAC,aAAa;MAClBS,WAAW,EAAC,aAAa;MACzBC,QAAQ,EAAEb,YAAa;MACvBI,KAAK,EAAEb,IAAI,CAACG;IAAY;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAChC7B,OAAA;MAAAsB,QAAA,EAAQ;IAAI;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnB,CAAC;AAEf;AAAC3B,EAAA,CAlDQD,QAAQ;EAAA,QAMIT,WAAW,EACXK,WAAW,EACbC,SAAS,EACVL,WAAW;AAAA;AAAAqC,EAAA,GATpB7B,QAAQ;AAoDjB,eAAeA,QAAQ;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}