{"ast":null,"code":"var _jsxFileName = \"/Users/alejandrogarciacarmona/Documents/Formacio\\u0301nBlacnosaur/tutorialReactReduxToolkitCRUD/react-redux-toolkit-crud/src/components/TaskList.js\",\n  _s = $RefreshSig$();\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { deleteTask } from '../features/task/taskSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TaskList() {\n  _s();\n  const tasks = useSelector(state => state.task); //traigo el estado de las tareas. //Esta linea junto con el console.log actúan parecido \n  console.log(tasks); //a un useState, pero a diferencia de que si creo otro componente, voy a poder controlarlo.\n\n  const dispatch = useDispatch();\n  const handleDelete = id => {\n    dispatch(deleteTask(id));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this), tasks.map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: task.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: task.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleDelete(task.id),\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 21\n      }, this)]\n    }, task.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n}\n_s(TaskList, \"CsZaW/tJMRku090Oh9Epf38CEO8=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["useSelector","useDispatch","deleteTask","jsxDEV","_jsxDEV","TaskList","_s","tasks","state","task","console","log","dispatch","handleDelete","id","children","fileName","_jsxFileName","lineNumber","columnNumber","map","title","description","onClick","_c","$RefreshReg$"],"sources":["/Users/alejandrogarciacarmona/Documents/FormaciónBlacnosaur/tutorialReactReduxToolkitCRUD/react-redux-toolkit-crud/src/components/TaskList.js"],"sourcesContent":["import { useSelector, useDispatch } from \"react-redux\";\nimport { deleteTask } from '../features/task/taskSlice';\n\nfunction TaskList() {\n    const tasks = useSelector(state => state.task); //traigo el estado de las tareas. //Esta linea junto con el console.log actúan parecido \n    console.log(tasks);                              //a un useState, pero a diferencia de que si creo otro componente, voy a poder controlarlo.\n\n    const dispatch = useDispatch()\n\n    const handleDelete = (id) => {\n        dispatch(deleteTask(id))\n    }\n\n    return (\n        <div>\n            <header>\n\n            </header>\n            {tasks.map(task => (\n                <div key={task.id}>\n                    <h3>{task.title}</h3>\n                    <p>{task.description}</p>\n                    <button onClick={() => handleDelete(task.id)}>Delete</button>\n                    <button></button>\n                </div>\n            ))}\n        </div>\n    )\n}\n\nexport default TaskList;\n"],"mappings":";;AAAA,SAASA,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,UAAU,QAAQ,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExD,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAChB,MAAMC,KAAK,GAAGP,WAAW,CAACQ,KAAK,IAAIA,KAAK,CAACC,IAAI,CAAC,CAAC,CAAC;EAChDC,OAAO,CAACC,GAAG,CAACJ,KAAK,CAAC,CAAC,CAA8B;;EAEjD,MAAMK,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAE9B,MAAMY,YAAY,GAAIC,EAAE,IAAK;IACzBF,QAAQ,CAACV,UAAU,CAACY,EAAE,CAAC,CAAC;EAC5B,CAAC;EAED,oBACIV,OAAA;IAAAW,QAAA,gBACIX,OAAA;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEQ,CAAC,EACRZ,KAAK,CAACa,GAAG,CAACX,IAAI,iBACXL,OAAA;MAAAW,QAAA,gBACIX,OAAA;QAAAW,QAAA,EAAKN,IAAI,CAACY;MAAK;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACrBf,OAAA;QAAAW,QAAA,EAAIN,IAAI,CAACa;MAAW;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACzBf,OAAA;QAAQmB,OAAO,EAAEA,CAAA,KAAMV,YAAY,CAACJ,IAAI,CAACK,EAAE,CAAE;QAAAC,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC7Df,OAAA;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAgB,CAAC;IAAA,GAJXV,IAAI,CAACK,EAAE;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAKZ,CACR,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd;AAACb,EAAA,CAzBQD,QAAQ;EAAA,QACCL,WAAW,EAGRC,WAAW;AAAA;AAAAuB,EAAA,GAJvBnB,QAAQ;AA2BjB,eAAeA,QAAQ;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}